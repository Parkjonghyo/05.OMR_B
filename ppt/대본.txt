처음에 사용자가 마주하게 되는 페이지 => landing page는 loginView.jsp가 됩니다.
이외의 페이지로 들어가려고 한다면 session값에 로그인 중인 유저가 있는지를 확인하여 로그인으로 돌려보내죠.

loginView에 도달한 이 때, 자신의 계정이 없는 사용자는 회원가입 페이지인 joinView.jsp로 이동합니다.

joinView.jsp 에서는 사용자의 이름, 중복되지 않는 아이디, 패스워드를 받아서
회원가입 로직을 처리하는 join.jsp에 post방식을 사용하여 넘겨줍니다.

join.jsp는 사용자의 이름, 아이디, 패스워드를 받아서 TesterDAO의 메소드를 통하여 DB의 tester 테이블에 insert명령을 수행하게되죠.

성공 시에는 성공했다는 알림과 함께 로그인을 해달라며 loginView.jsp 페이지로 리다이렉트 시킵니다.
실패 시에는 실패 알림과 함께 다시 joinView.jsp페이지를 보게하죠.

이제 사용자는 자신의 계정이 생겼습니다. 이를 이용하여 로그인을 하면 selectTestView라는,
어떤 종류의 반려동물에 대한 시험을 보고싶은가를 물어보는 페이지가 나옵니다.
또한, 로그인에 성공한 이 때, 세션에 사용자의 정보가 저장됩니다.

이 페이지는 사용자의 선택에 따라 원하는 동물의 아이디(값)을 get을통해 selectTest라는 controller jsp로 보냅니다.

selectTest에서는 방금 전에 사용한 테스터 테이블을 사용하는 MemberDAO가 아닌,
문제 테이블을 사용하는 QuestionDAO 에게서 해당하는 동물의 아이디(값)에 맞는 문제를 랜덤한 순서로 가져옵니다.

그렇게 가져온 문제들을 startTest.jsp로 보낸 후
startTest는 testView로 ArrayList<TestDTO>라는 형태의 문제리스트를 보내게 됩니다.

testView는 그 데이터를 사용자에게 보여주며 문제풀이를 시작합니다.
제한시간은 1시간. 사라져가는 시간을 보여주는 타이머는 중앙에 떠있게 됩니다.

또, 이 페이지에서는 새로고침과, 뒤로가기가 제한됩니다.

시험완료 시, result.jsp 로 모든 정보를 보내고 result에서 결과를 전부 정리한 후, resultView로 보내게됩니다.

resultView에서는 어떤 문제를 틀렸는지와 그에 대한 점수를 제공합니다.